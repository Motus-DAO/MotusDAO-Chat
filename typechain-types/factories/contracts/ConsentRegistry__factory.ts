/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ConsentRegistry,
  ConsentRegistryInterface,
} from "../../contracts/ConsentRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "policyHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "cidRoot",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "expiry",
        type: "uint64",
      },
    ],
    name: "ConsentGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "policyHash",
        type: "bytes32",
      },
    ],
    name: "ConsentRevoked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "consents",
    outputs: [
      {
        internalType: "string",
        name: "cidRoot",
        type: "string",
      },
      {
        internalType: "uint64",
        name: "expiry",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "policyHash",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "cidRoot",
        type: "string",
      },
      {
        internalType: "uint64",
        name: "expiry",
        type: "uint64",
      },
    ],
    name: "grantConsent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "policyHash",
        type: "bytes32",
      },
    ],
    name: "hasConsent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "policyHash",
        type: "bytes32",
      },
    ],
    name: "revokeConsent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061076c806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80636124c9721461005157806385a30850146100795780639d985e6f1461008e578063d6a2a009146100a1575b600080fd5b61006461005f366004610467565b6100c3565b60405190151581526020015b60405180910390f35b61008c610087366004610467565b6101fa565b005b61008c61009c366004610489565b6102a4565b6100b46100af366004610467565b6103a4565b6040516100709392919061052a565b600082815260208181526040808320848452909152808220815160608101909252805483929190829082906100f790610592565b80601f016020809104026020016040519081016040528092919081815260200182805461012390610592565b80156101705780601f1061014557610100808354040283529160200191610170565b820191906000526020600020905b81548152906001019060200180831161015357829003601f168201915b50505091835250506001919091015467ffffffffffffffff81166020830152600160401b900460ff1615156040918201528101519091506101b55760009150506101f4565b602081015167ffffffffffffffff16158015906101df575042816020015167ffffffffffffffff16105b156101ee5760009150506101f4565b60019150505b92915050565b60008281526020818152604080832084845290915290206001810154600160401b900460ff1661025e5760405162461bcd60e51b8152600401610255906020808252600490820152636e6f6e6560e01b604082015260600190565b60405180910390fd5b60018101805468ff000000000000000019169055604051829084907fd639d8ed110b9f9013055eaeb81779ef261a188a0255dc6562bff2284964799490600090a3505050565b604051806060016040528084848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093855250505067ffffffffffffffff84166020808401919091526001604093840152888252818152828220888352905220815181906103209082610633565b506020820151600190910180546040938401511515600160401b0268ffffffffffffffffff1990911667ffffffffffffffff9093169290921791909117905551849086907f92abb9de6e37b102551408b36c74215e7f3608cf987ba80eaec4f0cce1fb6b6990610395908790879087906106f3565b60405180910390a35050505050565b60006020818152928152604080822090935290815220805481906103c790610592565b80601f01602080910402602001604051908101604052809291908181526020018280546103f390610592565b80156104405780601f1061041557610100808354040283529160200191610440565b820191906000526020600020905b81548152906001019060200180831161042357829003601f168201915b5050506001909301549192505067ffffffffffffffff81169060ff600160401b9091041683565b6000806040838503121561047a57600080fd5b50508035926020909101359150565b6000806000806000608086880312156104a157600080fd5b8535945060208601359350604086013567ffffffffffffffff808211156104c757600080fd5b818801915088601f8301126104db57600080fd5b8135818111156104ea57600080fd5b8960208285010111156104fc57600080fd5b6020830195508094505060608801359150808216821461051b57600080fd5b50809150509295509295909350565b606081526000845180606084015260005b81811015610558576020818801810151608086840101520161053b565b506000608082850101526080601f19601f83011684010191505067ffffffffffffffff841660208301528215156040830152949350505050565b600181811c908216806105a657607f821691505b6020821081036105c657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b601f82111561062e576000816000526020600020601f850160051c8101602086101561060b5750805b601f850160051c820191505b8181101561062a57828155600101610617565b5050505b505050565b815167ffffffffffffffff81111561064d5761064d6105cc565b6106618161065b8454610592565b846105e2565b602080601f831160018114610696576000841561067e5750858301515b600019600386901b1c1916600185901b17855561062a565b600085815260208120601f198616915b828110156106c5578886015182559484019460019091019084016106a6565b50858210156106e35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081528260408201528284606083013760006060848301015260006060601f19601f860116830101905067ffffffffffffffff8316602083015294935050505056fea264697066735822122055df322b234f0064289f845e0211e56743aa2cb2f7b3674e0f2d3468692ea7c764736f6c63430008180033";

type ConsentRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConsentRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConsentRegistry__factory extends ContractFactory {
  constructor(...args: ConsentRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ConsentRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ConsentRegistry__factory {
    return super.connect(runner) as ConsentRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConsentRegistryInterface {
    return new Interface(_abi) as ConsentRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ConsentRegistry {
    return new Contract(address, _abi, runner) as unknown as ConsentRegistry;
  }
}
